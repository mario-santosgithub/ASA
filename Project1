#include <iostream>
#include <vector>
#include <string>

// prototypes
void problemOne(std::vector<std::vector<int>> numbers);
std::vector<std::vector<int>> initialize(int problem);


//global variables
int size;

// main function
int main() {
    
    int problem;

    std::cin >> problem;
    if (problem == 1) {
        std::vector<std::vector<int>> numbers = initialize(problem);
        problemOne(numbers);
    }

    else if (problem == 2) {
        std::vector<std::vector<int>> numbers = initialize(problem);

    }
    return 0;
}

// reads the input and creates a vector with the numbers given
std::vector<std::vector<int>> initialize(int problem) {

    std::string c;
    int fNumber;
    std::vector<std::vector<int>> vector;

    for(int p=0; p < problem; p++) {

        std::cin >> fNumber;

        std::getline(std::cin, c);
        size = (c.length()) / 2 + 1; // numbers to read (first already read)

        std::vector<std::vector<int>> numbers(problem, std::vector<int>(size, 0));
        numbers[p][0] = fNumber;

        int pos = 1;
        for (int i=1; i<size*2-1; i+=2) { // string's length -1 because of \n

            numbers[p][pos] = c[i] - '0';
            pos++; 
        }
        vector = numbers;
    }
    return vector;
}


void problemOne(std::vector<std::vector<int>> numbers) {  //   numeros = (length + 1) / 2

    int maxlength = 0, nSoluctions = 0;
    for (int i=0; i < size-1; i++) {
        if (numbers[0][i] < numbers[0][i+1]) {
            maxlength++;
        }
    }
    printf("maxlength: %d\n", maxlength);
    maxlength++;

    if(maxlength == size) { std::cout << maxlength << " " << 1 << std::endl; return; }
    if(maxlength == 1) { std::cout << maxlength << " " << size << std::endl; return; }

    printf("1\n");
    for(int i=0; i < size-1; i++) {
        int bigger = 0;
        for(int j=i; j < size; j++) {

            if(numbers[0][i] < numbers[0][j]) {
                bigger++;
            }
        }
        if(bigger >= maxlength-1) {
            nSoluctions++;
        }
        printf("n: %d, bigger: %d\n", numbers[0][i], bigger);
    }
    std::cout << maxlength << " " << nSoluctions << std::endl;
}
